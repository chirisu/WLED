name: Build WLED with PIR Support

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment:
          - esp32dev_pir
          - esp32c3dev_pir
          - d1_mini_pir
          - nodemcuv2_pir
          - lolin_s2_mini_pir
          - esp32s3dev_8MB_opi_pir
    
    steps:
    - name: Checkout WLED repository
      uses: actions/checkout@v4
      with:
        repository: Aircoookie/WLED  # Checkout official WLED repo
        ref: '0_15_x'  # Use branch (0_15_x, main) or tag (v0.15.1, v0.14.4)
        submodules: recursive
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Cache PlatformIO
      uses: actions/cache@v4
      with:
        path: |
          ~/.platformio
          .pio
        key: ${{ runner.os }}-pio-${{ hashFiles('**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-pio-
    
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
    
    - name: Create platformio_override.ini with PIR usermod
      run: |
        cat > platformio_override.ini << 'EOF'
        # PIR Sensor Usermod Build Configuration
        
        [env:esp32dev_pir]
        extends = env:esp32dev
        custom_usermods = PIR_sensor_switch
        
        [env:esp32c3dev_pir]
        extends = env:esp32c3dev
        custom_usermods = PIR_sensor_switch
        
        [env:d1_mini_pir]
        extends = env:d1_mini
        custom_usermods = PIR_sensor_switch
        
        [env:nodemcuv2_pir]
        extends = env:nodemcuv2
        custom_usermods = PIR_sensor_switch
        
        [env:lolin_s2_mini_pir]
        extends = env:lolin_s2_mini
        custom_usermods = PIR_sensor_switch
        
        [env:esp32s3dev_8MB_opi_pir]
        extends = env:esp32s3dev_8MB_opi
        custom_usermods = PIR_sensor_switch
        EOF
    
    - name: Build firmware
      run: |
        pio run -e ${{ matrix.environment }}
    
    - name: Rename firmware files
      run: |
        mkdir -p output
        BASE_ENV=$(echo "${{ matrix.environment }}" | sed 's/_pir$//')
        cp .pio/build/${{ matrix.environment }}/firmware.bin output/WLED_${BASE_ENV}_PIR.bin || true
        cp .pio/build/${{ matrix.environment }}/firmware.elf output/WLED_${BASE_ENV}_PIR.elf || true
    
    - name: Upload firmware artifacts
      uses: actions/upload-artifact@v4
      with:
        name: WLED-PIR-${{ matrix.environment }}
        path: output/
        retention-days: 30
    
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: output/*.bin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
